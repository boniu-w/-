2-ppt引入多线程场景
3-什么是程序，什么是进程，什么是线程
4-线程的作用，都能干什么？（用它来解决生活实际场景中的那些问题）
5-实际讲解新建一个TestThread例子。点进去源码中看start(),run(),stop(),sleep(), interrupt()等等
6-7-8 继承thread的例子 
第一个类  PrintThread, PrintTheard()构造函数 ，run（）方法，和相关打印语句。
第二个类  TestThread  , new 4个 PrintThread，分别。start();

9-10-11 改造上面的PrintThread,  实现Runnable接口,注意 name

Thread1.run()  与 new Thread(thread1).start(); 的演示效果

12 继承thread 与 Runnable的创建区别
13,14 先跳过去

15 插入线程运行结构图，线程不同状态之间的转换
1、新建状态（New）：新创建了一个线程对象。
2、就绪状态（Runnable）：线程对象创建后，其他线程调用了该对象的start()方法。该状态的线程位于可运行线程池中，变得可运行，等待获取CPU的使用权。
3、运行状态（Running）：就绪状态的线程获取了CPU，执行程序代码。
4、阻塞状态（Blocked）：阻塞状态是线程因为某种原因放弃CPU使用权，暂时停止运行。直到线程进入就绪状态，才有机会转到运行状态。阻塞的情况分三种：
（一）、等待阻塞：运行的线程执行wait()方法，JVM会把该线程放入等待池中。(wait会释放持有的锁)
（二）、同步阻塞：运行的线程在获取对象的同步锁时，若该同步锁被别的线程占用，则JVM会把该线程放入锁池中。
（三）、其他阻塞：运行的线程执行sleep()或join()方法，或者发出了I/O请求时，JVM会把该线程置为阻塞状态。当sleep()状态超时、join()等待线程终止或者超时、或者I/O处理完毕时，线程重新转入就绪状态。（注意,sleep是不会释放持有的锁）
5、死亡状态（Dead）：线程执行完了或者因异常退出了run()方法，该线程结束生命周期。

16-22 念ppt

23 24 正确理解优先级的和调度  概念
25 26 练习 线程优先级 setPriority(4)

27 线程同步概念
28 29 线程同步的概念
30 死锁的结构和概念引入








